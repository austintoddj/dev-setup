#!/usr/bin/env bash

# Close any open System Preferences panes, to prevent them from
# overriding settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until setup
# has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &


# ==================================================================
# ROOT
# ==================================================================

cd ~
mkdir Sites

cd ~/Sites
git clone https://github.com/austintoddj/dev-setup.git


# ==================================================================
# DOTFILES
# ==================================================================

cd ~/Sites/dev-setup/files
./index

cd ~


# ==================================================================
# PACKAGES
# ==================================================================

echo "Installing Composer"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"
mv composer.phar /usr/local/bin/composer

echo "Installing Composer packages"
composer_packages=(
  "laravel/valet"
)
for composer_package in "${composer_packages[@]}"; do
  composer global require "$composer_package"
done

echo "Installing Laravel Valet"
valet install

echo "Installing Homebrew"
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo "Installing Homebrew packages"

homebrew_packages=(
  "git-flow-avh"
  "mas"
  "mysql"
  "sqlite"
  "tldr"
  "yarn"
)
for homebrew_package in "${homebrew_packages[@]}"; do
  brew install "$homebrew_package"
done

echo "Upgrading NPM"
npm install npm@latest -g


# ==================================================================
# APPS / FONTS
# ==================================================================

echo "Installing Homebrew cask apps"

homebrew_cask_packages=(
  "1password"
  "adobe-creative-cloud"
  "bettertouchtool"
  "cleanmymac"
  "dropbox"
  "google-chrome"
  "macdown"
  "navicat-premium-essentials"
  "phpstorm"
  "sequel-pro"
  "slack"
  "spotify"
  "sublime-text"
  "yummy-ftp"
)
for homebrew_cask_package in "${homebrew_cask_packages[@]}"; do
  brew cask install "$homebrew_cask_package"
done

echo "Installing Mac App Store apps"

mac_app_store_apps=(
  "615916400" # BrowseShot
  "523620159" # CleanMyDrive 2
)
for mac_app_store_app in "${mac_app_store_apps[@]}"; do
  mas install "$mac_app_store_app"
done

echo "Installing fonts"
for font in $(find "./fonts" -depth 1 -exec basename {} \;); do
  cp -R "$(pwd)/fonts/$font" "~/Library/Fonts/"
done


# ==================================================================
# MACOS
# ==================================================================

echo "Configuring macOS:"

echo "General UI/UX"

# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Remove duplicates in the “Open With” menu (also see `lscleanup` alias)
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# Set sidebar icon size to small
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 1

# Always show scrollbars
# Possible values: `WhenScrolling`, `Automatic` and `Always`
#defaults write NSGlobalDomain AppleShowScrollBars -string "Always"

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Disable the crash reporter
defaults write com.apple.CrashReporter DialogType -string "none"

echo "Optimizing SSD"

# Disable hibernation (speeds up entering sleep mode)
sudo pmset -a hibernatemode 0

echo "Keyboard and inputs"

# Trackpad: enable tap to click for this user and for the login screen
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

# Disable press-and-hold for keys in favor of key repeat
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Increase sound quality for Bluetooth headphones/headsets
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 3

# Set a shorter delay until key repeat
defaults write NSGlobalDomain InitialKeyRepeat -int 12

echo "Display and screen"

# Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the desktop
defaults write com.apple.screencapture location -string "${HOME}/Desktop"

# Disable shadow in screenshots
#defaults write com.apple.screencapture disable-shadow -bool true

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

echo "Finder options"

# Finder: disable window animations and Get Info animations
defaults write com.apple.finder DisableAllAnimations -bool true

# Finder: allow text selection in Quick Look
defaults write com.apple.finder QLEnableTextSelection -bool true

# Avoid creating .DS_Store files on network volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Show icons for hard drives, servers, and removable media on the desktop
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
#defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Avoid creating .DS_Store files on network volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Show item info near icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

# Show item info at the bottom of the icons on the desktop
/usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom true" ~/Library/Preferences/com.apple.finder.plist

# Enable snap-to-grid for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

# Set grid spacing for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 50" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 50" ~/Library/Preferences/com.apple.finder.plist

# Set the size of icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 44" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 44" ~/Library/Preferences/com.apple.finder.plist

# Use column view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`, `Nlsv`
defaults write com.apple.finder FXPreferredViewStyle -string "clmv"

# Show the ~/Library folder by default
chflags nohidden ~/Library

# Show the /Volumes folder
sudo chflags nohidden /Volumes

# Show the ~/Users folder
chflags nohidden /Users

# Remove Dropbox’s green checkmark icons in Finder
#file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
#[ -e "${file}" ] && mv -f "${file}" "${file}.bak"

# Expand the following File Info panes:
# “General”, “Open with”, and “Sharing & Permissions”
defaults write com.apple.finder FXInfoPanesExpanded -dict \
    General -bool true \
    OpenWith -bool true \
    Privileges -bool true

echo "Dock, dashboard, and hot corners"

# Set the icon size of Dock items to 30 pixels
defaults write com.apple.dock tilesize -int 30

# Don’t animate opening applications from the Dock
defaults write com.apple.dock launchanim -bool false

# Speed up Mission Control animations
defaults write com.apple.dock expose-animation-duration -float 0.1

# Disable Dashboard
defaults write com.apple.dashboard mcx-disabled -bool true

# Don’t show Dashboard as a Space
defaults write com.apple.dock dashboard-in-overlay -bool true

# Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Add iOS Simulator to Launchpad
sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"

# Hot corners
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center
# Top left screen corner → Mission Control
defaults write com.apple.dock wvous-tl-corner -int 2

echo "Safari and WebKit"

# Privacy: don’t send search queries to Apple
defaults write com.apple.Safari UniversalSearchEnabled -bool false
defaults write com.apple.Safari SuppressSearchSuggestions -bool true

# Show the full URL in the address bar (note: this still hides the scheme)
defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true

# Set Safari’s home page to an empty page for faster loading
# Currently not working in macOS Sierra
defaults write com.apple.Safari HomePage -string "about:blank"

# Hide Safari’s sidebar in Top Sites
defaults write com.apple.Safari ShowSidebarInTopSites -bool false

# Disable Safari’s thumbnail cache for History and Top Sites
defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2

# Prevent Safari from opening ‘safe’ files automatically after downloading
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

# Remove useless icons from Safari’s bookmarks bar
defaults write com.apple.Safari ProxiesInBookmarksBar "()"

# Enable Safari’s debug menu
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

# Enable the Develop menu and the Web Inspector in Safari
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

# Warn about fraudulent websites
defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true

# Disable plug-ins
defaults write com.apple.Safari WebKitPluginsEnabled -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool false

# Disable Java
defaults write com.apple.Safari WebKitJavaEnabled -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false

# Block pop-up windows
defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false

# Enable “Do Not Track”
defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true

# Update extensions automatically
defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true

# Always display the status bar
defaults write com.apple.Safari ShowStatusBar -boolean true

echo "Terminal.app settings"

# Only use UTF-8 in Terminal.app
defaults write com.apple.terminal StringEncodings -array 4

echo "Time Machine"

# Prevent Time Machine from prompting to use new hard drives as backup volume
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

echo "Activity Monitor"

# Show the main window when launching Activity Monitor
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

# Visualize CPU usage in the Activity Monitor Dock icon
defaults write com.apple.ActivityMonitor IconType -int 5

# Show all processes in Activity Monitor
defaults write com.apple.ActivityMonitor ShowCategory -int 0

# Sort Activity Monitor results by CPU usage
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection -int 0

echo "TextEdit and Disk Utility"

# Use plain text mode for new TextEdit documents
defaults write com.apple.TextEdit RichText -int 0

# Open and save files as UTF-8 in TextEdit
defaults write com.apple.TextEdit PlainTextEncoding -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4

# Set tab width to 4 instead of the default 8
defaults write com.apple.TextEdit "TabWidth" '4'

# Enable the debug menu in Disk Utility
defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
defaults write com.apple.DiskUtility advanced-image-options -bool true

echo "Mac App Store preferences"

# Enable the WebKit Developer Tools in the Mac App Store
defaults write com.apple.appstore WebKitDeveloperExtras -bool true

# Enable Debug Menu in the Mac App Store
defaults write com.apple.appstore ShowDebugMenu -bool true

# Enable the automatic update check
defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

# Check for software updates daily, not just once per week
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# Download newly available updates in background
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

# Install System data files & security updates
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

# Automatically download apps purchased on other Macs
defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1

# Turn on app auto-update
defaults write com.apple.commerce AutoUpdate -bool true

# Allow the App Store to reboot machine on macOS updates
defaults write com.apple.commerce AutoUpdateRestartRequired -bool true

echo "Resetting affected applications"

for app in "Activity Monitor" \
            "Dock" \
            "Finder" \
            "Safari" \
            "SystemUIServer"; do
    killall "${app}" > /dev/null 2>&1
done


# ==================================================================
# MANUAL
# ==================================================================

cat << EOF

Most things are taken care of automatically with the setup script, but some manual items are needed:

# Desktop setup

- Dropbox
  - Start Dropbox on system startup (on)
  - Enable Finder integration (on)
  - Dropbox folder location (austintoddj)
- 1Password
  - Import existing vault from Dropbox
  - Always keep 1Password mini running (on)
  - Show mini app icon in the menu bar (on)
  - Use rich icons (on)
  - Show item count in the sidebar (on)
- iCloud
  - Enable everything except (Back to My Mac)
- Delete unused factory Applications
- Notification center widgets (Calendar)
- Users
  - Add avatar
  - Login items (BetterTouchTool, Dropbox)
- Finder
  - New Finder windows show (austintoddj)
  - Open folders in new tabs instead of windows (off)
  - Favorites (iCloud Drive, Applications, Desktop, Sites, Documents, Dropbox, austintoddj)
  - Show all filename extensions (off)
  - Show warning before changing an extension (off)
  - Show warning before removing from iCloud Drive (on)
  - Show warning before emptying the Trash (on)
  - Correct spelling automatically (off)
  - Remove items from the Trash after 30 days (off)
  - Keep folders on top when sorting by name (off)
- Safari
  - Extensions
    - Confirm install (1Password, Adblock Plus)
- Chrome
  - Import bookmarks from Safari
  - Extensions
    - Confirm install (1Password, Adblock Plus)
- Calendar
- YummyFTP
  - Link bookmarks to Dropbox Apps
- MacDown
- Sublime
  - Install the Package Manager
  - Install Material theme in Packages/Material Theme/schemes/Material-Theme.tmTheme
  - Replace the contents of Preferences.sublime-settings, Distraction Free.sublime-settings
  - Install packages
  - Restart Sublime
  - Enter license
- PhpStorm
  - Install Material Theme UI in Settings > Preferences > Plugins > Browse Repositories
  - Restart PHPStorm
  - IDE theme (not the code color scheme) can be changed in Tools > Material Theme
  - Install packages
  - Enter license
- Xcode
- Sequel Pro
  - Import bookmarks
- Navicat
  - Enter license
  - Sign in
- Terminal
  - Open Terminal > Settings and import the Solarized Dark ansi.terminal theme
  - Update Font/Cursor/Startup as needed
  - New window with profile (Solarized)
  - Shells open with (Default login shell)
  - New windows open with (Default Profile, Default Working Directory)
  - New tabs open with (Same Profile, Default Working Directory)
  - Use high-contrast I beam (on)
  - Font (Operator Mono Book 11pt)
  - Text
    - Antialias text (on)
    - Use bold fonts (off)
    - Allow blinking text (off)
    - Display ANSI colors (on)
    - Use bright colors for bold text (on)
  - Cursor
    - Block (on)
    - Underline (off)
    - Vertical Bar (off)
    - Blink cursor (on)
  - Window Size
    - Columns (130)
    - Rows (45)
- Photoshop
  - Sign in with Adobe Creative Cloud
- Pages
- Keynote
- Numbers
- Notes
- Slack
  - Sign in to workspace (cnvs-io.slack.com)
- Messages
  - Text Message Forwarding (on, from iPhone)
- Spotify
  - Sign in
  - Highest quality of streaming and downloads
- App Store
  - Automatically check for updates (on)
  - Download newly available updates in the background (off)
  - Install app updates (off)
  - Install macOS updates (off)
  - Install system data files and security updates (off)
- 1Password
  - Already done ^
- Github
  - Set up SSH keys

Then, restart desktop.

# Mobile setup (iPhone)

- Settings
  - Sign in with Apple ID
  - Text message forwarding to desktop
  - Send as SMS when iMessage is unavailable
  - Don't store passwords in Safari
  - Restrictions (off)
  - Cellular enable everything
  - Turn off predictive keyboard
- App organization
  - Dock
    - Phone, Inbox, Safari, Spotify
  - Screen 1
    - Messages, Calendar, Flickr, Camera, Dark Sky, Google Maps, Clock, YouTube, Facebook, Twitter, Instagram, LinkedIn, Messenger, Reddit, Dropbox, Slack, 1Password, Google Authenticator, Microsoft Authenticator, Photos, App Store, Notes, Reminders, Settings
  - Screen 2
    - Folder: Design
      - PS Express, Photoshop Fix, Photoshop Mix, Phonto, ProCam
    - Folder: Development
      - Analytics, CodeHub, Prompt, Transmit
    - Folder: Entertainment
      - Netflix, Facebook Page, Remote, TV
    - Folder: Food
      - Chick-fil-A, Chipotle, Jimmy John's, Starbucks
    - Folder: Gaming
      - Halo Channel, IGN, Pokemon Go, Xbox
    - Folder: iOS
    - Folder: Misc
      - Drive Safe & Save, TCF Bank
    - Folder: Network
      - Fing, Scany, Speedtest
    - Folder: Shop
      - 1-800 Contacts, Amazon, Best Buy, FedEx, Target, Walmart
- Widgets (Weather, Up Next)
- Delete unused stock apps
- Clock
  - Set up alarms
- Find iPhone
  - Turn on Send Last Location
- Health
  - Set up profile and medical ID
- Wallet
  - Add debit card for Apple Pay

EOF