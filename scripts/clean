#!/bin/zsh
set -euo pipefail

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until setup
# has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# ==================================================================
# PROCESSES
# ==================================================================

killall node || true

# ==================================================================
# ARTIFACTS
# ==================================================================

# Remove unused homebrew artifacts
brew cleanup
brew services cleanup
brew cu --cleanup

# Remove .DS_Store files
find "$HOME" -name '.DS_Store' -delete

# Clear the Downloads directory
rm -rf "$HOME"/Downloads/*

# Empty the trash
rm -rf "$HOME"/.Trash/*

# ==================================================================
# REPO BRANCHES
# ==================================================================

deep-git-prune ()
{
  IFS=$'\n\t'

  # Remove merged git branches and stale remote references other than master and the current branch in each git directory
  set +e
  LOCAL_BRANCHES=$(git branch --merged master | grep -v -e 'master' -e '\*' | tr -d ' ')
  set -e

  if [[ -n "$LOCAL_BRANCHES" ]]; then
    for BRANCH in $LOCAL_BRANCHES; do
      git branch -d "$BRANCH"
    done
  fi

  git remote prune origin
}

cd "$HOME/Sites"

for i in */.git; do ( echo $i; cd $i/..; deep-git-prune; ); done

# ==================================================================
# REPO STATES
# ==================================================================

deep-git-status ()
{
  cd "$HOME/Sites"
  find . -path "*/.git" -maxdepth 2 -print -execdir git status ";"
}

output=$(deep-git-status | grep \
-e "Untracked files:" \
-e "Changes not staged for commit:"  \
-e "Changes to be committed:" \
-e "Your branch is ahead" \
)

if [ -z "$output" ]
then
  echo "All git repos are clean"
else
  echo "Clean dirty git repos!"
  deep-git-status
fi
